
1. git init  生成版本库（出现隐藏文件夹git）
2. git branch (显示主分支和其它分支，当前分支前有*)


2. git add a.txt  (添加至暂存区)
   git add --all ( 添加所有工作区文件)

3. git commit -m 'a.txt添加了什么内容'     ( 添加至版本库)
4. git status  (查看工作区，暂存区状态)
5. git log ( 查看版本库，但回退后，有些版本不再显示 )  
6. git reflog ( 可查看版本库所有历史记录)

7. 仅删除暂存区里的文件 
   git rm --cache a.txt

8. 删除暂存区和工作区文件：
   git rm -f a.txt

9.删除错误提交的commit
  git reset --soft 版本库id      : 仅撤消已提交的版本库，不会修改工作区和暂存区
  git reset --mixed  版本库id  : 仅撤消已提交的版本库和暂存区， 不会修改工作区
  git reset --hard 版本库id     : 彻底将工作区，暂存区和版本库记录恢复到指定的版本库
  git reset --hard HEAD^     :  撤消到当前指针的上一个版本库
  gir reset --hard 版本库id   : 可撤消到曾经生成的任意一个版本库状态。

10.  git本地仓库关联远程仓库的两种方式：
   （1） 将远程的代码clone到本地仓库
   （2） 将本地的代码关联到远程仓库

11.  将本地的已有项目关联到github上的新的项目上： （保证有ssh）
   （1）在github上新建仓库
   （2）在本地仓库中执行 git remote add origin 仓库地址（在github中找）
   （3） git push -u origin master 将代码提交到远程仓库  （origin是默认库名，master是分支名）

   （由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。）
    如果不成功：
    git remote rm origin  然后继续上面2，3步即可。

12. 设置Git的user name和email：
	$ git config --global user.name "xuhaiyan"
    或者：
    $ git config --global user.email "haiyan.xu.vip@gmail.com"

13. 生成SSH密钥过程：
    1.查看是否已经有了ssh密钥：cd ~/.ssh
    如果没有密钥则不会有此文件夹，有则备份删除
    2.生成密钥：
    $ ssh-keygen -t rsa -C “haiyan.xu.vip@gmail.com”
    按3个回车，密码为空。
    3.最后得到了两个文件：id_rsa和id_rsa.pub
    4.在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。

14、 将远程的代码clone到本地仓库
	$ git clone git@github.com:billyanyteen/github-services.git  本地要生成文件夹
    $ git clone git远程仓库地址  1212-02

15、pwd  （显示当前在哪个目录下)
    cd folder  ( 进入目录)
    ls (显示当前目录下文件列表)

16、git remote -v   （显示项目目前的远程仓库，因为是新建项目，所以结果为空。）

17、git fetch:相当于是从远程获取最新版本到本地，不会自动merge

18、git pull origin master    拉到本地并合并