解决了css的一些缺憾：
1.语法不够强大，不能够嵌套书写，不利于模块化开发
2.没有变量和逻辑上的复用机制，导致在css的属性值中只能使用字面量形式，以及不断重复书写重复的样式，导致难以维护。


css预处理器给出了非常可行的解决方案：
1.变量：就像其他编程语言一样，免于多处修改。
	Sass：使用「$」对变量进行声明，变量名和变量值使用冒号进行分割
	Less：使用「@」对变量进行声明
	Stylus：中声明变量没有任何限定，结尾的分号可有可无，但变量名和变量值之间必须要有『等号』。但需要注意的是，如果用“@”符号来声明变量，Stylus会进行编译，但不会赋值给变量。就是说，Stylus 不要使用『@』声明变量。Stylus 调用变量的方法和Less、Sass完全相同。

2.作用域：有了变量，就必须得有作用域进行管理。就想js一样，它会从局部作用域开始往上查找变量。
	Sass：它的方式是三者中最差的，不存在全局变量的概念
	Less：它的方式和js比较相似，逐级往上查找变量
	Stylus：它的方式和Less比较相似，但是它和Sass一样更倾向于指令式查找
3.嵌套：对于css来说，有嵌套的写法无疑是完美的，更像是父子层级之间明确关系
	三者在这处的处理都是一样的，使用「&」表示父元素


