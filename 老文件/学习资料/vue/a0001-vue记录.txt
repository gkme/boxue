渐进式框架  MVVM(angular,vue) 
vue全家桶 vuejs + vuerouter(路由) + vuex(状态管理) + axios 
vue-cli(构建工具)

搭建vue项目步骤：   参考：https://www.cnblogs.com/liaoanran/p/8042893.html
cnpm install -g vue-cli
vue init webpack test
cnpm install 
npm run dev
http://localhost:8080访问

项目开发完成之后，可以使用npm run build进行打包工作
打包完成之后，会生成dist文件夹，项目上线时候，只需要将dist文件夹放到服务器就行了。

value树形默认情况下会被vue忽略掉，selected,checked都没有意义

v-text==={{}} 防止{{}}出现在页面上
<div v-text="msg"></div>

defineProperty的set()、get()方法

vue会循环data中的数据(数据劫持) 依次增加getter和setter
注意：此时只有空对象a,里面没绑定s属性
var vm = new Vue(function(){
    el:"#app",
    data:{
	a:{}
     }
})
在控制台vm.a.s="1"网页视图不变化是因为使用变量时,先要初始化,否则新加的属性不会导致页面刷新
vm.$set(vm.a,"school",1); //此方法可以给对象添加响应式的数据变化(页面是有数据1的)
vm.a={s:"1"} //替换原对象

如果不传递参数则不要写括号会自动传入事件源,写括号要手动传入$event
<div @click="fn($event,1)">点击</div>

npm install vue axios bootstrap

复选框：
只有一个复选框的时候，会把此值转化为boolean类型，如果是true则代表选中
如果是多个check要增加value属性并且数据类型是数组
<input type="checkbox" v-mode="b" value="游泳">游泳
<input type="checkbox" v-mode="b" value="读书">读书
data:{b:[]}

解决页面闪烁问题：
[v-cloak]{display:none;}
<div id="qpp" v-cloak></div>


//resolve代表的是转向成功态
//reject代表的是转向失败态
//resolve和reject均是函数
//promise的实例就一个then方法,then方法中有两个参数
function buyPack(){
    return new Promise((resolve,reject)=>{
        setTimeout(()=>{
            if(Math.random()>=0.5){
                resolve("买");
            }else{
                reject("不买");
            }
        },Math.random()*1000);
    })
}
buyPack().then(function(data){
    console.log(data);
},function(data){
    console.log(data);
})


//用v-bind输入路径
<img :src="./images/1.jpg" />
//.number使输入框的值变成数字类型 .lazy当输入框失去焦点时更新数据
<input type="number" v-model.number.lazy="p.c" />


watch 和 computed都有缓存机制
推荐使用 computed  其次watch  最后methods

声明周期函数：
beforeCreate（创建前）
created（创建后）
beforeMount（载入前）
mounted（载入后）  里面才能拿到dom
beforeUpdate（更新前）
updated（更新后）
beforeDestroy（销毁前）
destroyed（销毁后）


var height = this.$refs.elememt.offsetHeight;//100
var heightStyle =this.$refs.ceshi.style.width;//100px
$属性：$refs获取组件内的元素
$parent:获取当前组件对象的父组件
$chidren:获取子组件
$root:获取new Vue的实例 vm
$el:组件对象dom元素

前端路由的原理：
hash值改变页面不跳转，innerhtml改变页面内容
